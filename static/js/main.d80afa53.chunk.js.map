{"version":3,"sources":["../../../react/react_todo-app/src/components/InputForm/InputForm.js","../../../react/react_todo-app/src/components/TodoItem/TodoItem.js","../../../react/react_todo-app/src/components/Footer/Footer.js","../../../react/react_todo-app/src/App.js","../../../react/react_todo-app/src/index.js"],"names":["InputForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputChanged","event","setState","task","target","value","submitForm","preventDefault","state","trim","newTodo","onSubmitted","react_default","a","createElement","onSubmit","className","placeholder","onChange","Component","TodoItem","_ref","todo","editTodoId","showEditField","submitEditItem","setActive","deleteTodo","editTodo","onFocusChanged","_useState","useState","_useState2","slicedToArray","completed","setCompleted","_useState3","_useState4","editTask","setEditTask","fieldRef","useRef","selectItem","status","id","useEffect","current","focus","submitChanges","concat","isActive","style","display","type","checked","onClick","htmlFor","onDoubleClick","doubleClicked","onBlur","onKeyUp","keyCode","ref","defaultProps","Footer","todos","active","onButtonSelected","deleteSelectedTodo","isTodoActive","some","length","href","App","newItemSubmitted","newItem","item","_objectSpread","prev","toConsumableArray","newTask","onEditSubmitted","map","filterTodos","filter","showTodos","todoId","selectAll","allCompleted","every","JSON","parse","localStorage","getItem","prevProps","prevState","stateJson","stringify","setItem","_this2","_this$state","showButton","components_InputForm_InputForm","components_TodoItem_TodoItem","key","components_Footer_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d80afa53.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass InputForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: '',\n    };\n  }\n\n  inputChanged = (event) => {\n    this.setState({\n      task: event.target.value,\n    });\n  }\n\n  submitForm = (event) => {\n    event.preventDefault();\n    if (!this.state.task.trim()) {\n      return;\n    }\n\n    const newTodo = {\n      task: this.state.task,\n    };\n\n    this.props.onSubmitted(newTodo);\n\n    this.setState({\n      task: '',\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.submitForm}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={this.state.task}\n          onChange={this.inputChanged}\n        />\n      </form>\n    );\n  }\n}\n\nInputForm.propTypes = {\n  onSubmitted: PropTypes.func.isRequired,\n};\n\nexport default InputForm;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({\n  todo,\n  editTodoId,\n  showEditField,\n  submitEditItem,\n  setActive,\n  deleteTodo,\n  editTodo,\n  onFocusChanged,\n}) => {\n  const [completed, setCompleted] = useState(false);\n  const [editTask, setEditTask] = useState('');\n  const fieldRef = useRef(null);\n\n  const selectItem = () => {\n    const status = !completed;\n\n    setActive(todo.id, !status);\n\n    setCompleted(status);\n  };\n\n  useEffect(() => () => fieldRef.current.focus());\n\n  const destroyTodo = () => deleteTodo(todo.id);\n\n  const inputChanged = event => setEditTask(event.target.value);\n\n  const doubleClicked = (event, id) => {\n    event.preventDefault();\n    editTodo(id);\n  };\n\n  const dropChanges = (event) => {\n    if (event.keyCode === 27) {\n      onFocusChanged();\n    }\n  };\n\n  const submitChanges = event => submitEditItem(event, editTask);\n\n  return (\n    <li\n      className={`${todo.isActive ? '' : 'completed'}\n      ${showEditField ? ' editing' : ''}`}\n    >\n      <div\n        className=\"view\"\n        style={\n          editTodoId === todo.id\n            ? { display: 'none' }\n            : { display: 'block' }\n        }\n      >\n        <input\n          onChange={selectItem}\n          type=\"checkbox\"\n          checked={!todo.isActive}\n          className=\"toggle\"\n          id={`todo-${todo.id}`}\n        />\n        <label\n          onClick={selectItem}\n          htmlFor={`todo-${todo.id}`}\n          onDoubleClick={event => doubleClicked(event, todo.id)}\n        >\n          {todo.task}\n        </label>\n        <button\n          onClick={destroyTodo}\n          type=\"button\"\n          className=\"destroy\"\n        />\n      </div>\n      <form onSubmit={submitChanges}>\n        <input\n          onBlur={submitChanges}\n          className=\"edit\"\n          onKeyUp={dropChanges}\n          ref={fieldRef}\n          onChange={inputChanged}\n          value={editTask}\n          placeholder=\"What do you want to change?\"\n          style={\n            editTodoId === todo.id\n              ? { display: 'block' }\n              : { display: 'none' }\n          }\n        />\n      </form>\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  setActive: PropTypes.func.isRequired,\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    isActive: PropTypes.bool,\n    task: PropTypes.string,\n  }).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  showEditField: PropTypes.bool.isRequired,\n  editTodoId: PropTypes.number,\n  submitEditItem: PropTypes.func.isRequired,\n  editTodo: PropTypes.func.isRequired,\n  onFocusChanged: PropTypes.func.isRequired,\n};\n\nTodoItem.defaultProps = {\n  editTodoId: null,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = ({\n  todos, active, onButtonSelected, deleteSelectedTodo,\n}) => {\n  const isTodoActive = todos.some(todo => todo.isActive === false);\n\n  return (\n    <footer\n      className=\"footer\"\n      style={todos.length > 0 ? { display: 'block' } : { display: 'none' }}\n    >\n      <span className=\"todo-count\">\n        {`${todos.length} items left`}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            onClick={() => onButtonSelected('all')}\n            href=\"#/\"\n            className={active === 'all' ? 'selected' : ''}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            onClick={() => onButtonSelected('active')}\n            href=\"#/active\"\n            className={active === 'active' ? 'selected' : ''}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            onClick={() => onButtonSelected('completed')}\n            href=\"#/completed\"\n            className={active === 'completed' ? 'selected' : ''}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        style={isTodoActive ? { display: 'block' } : { display: 'none' }}\n        onClick={deleteSelectedTodo}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    isActive: PropTypes.bool,\n    task: PropTypes.string,\n  })).isRequired,\n  active: PropTypes.string.isRequired,\n  onButtonSelected: PropTypes.func.isRequired,\n  deleteSelectedTodo: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport InputForm from './components/InputForm/InputForm';\nimport TodoItem from './components/TodoItem/TodoItem';\nimport Footer from './components/Footer/Footer';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = JSON.parse(localStorage.getItem('state')) || {\n      todos: [],\n      id: 1,\n      showTodos: 'all',\n      editTodoId: null,\n      showEditField: false,\n      task: '',\n      editTask: '',\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state !== prevState) {\n      const stateJson = JSON.stringify(this.state);\n\n      localStorage.setItem('state', stateJson);\n    }\n  }\n\n  newItemSubmitted = (newItem) => {\n    const item = {\n      ...newItem,\n      id: this.state.id,\n      isActive: true,\n    };\n\n    this.setState(prev => ({\n      todos: [...prev.todos, item],\n      id: prev.id + 1,\n    }));\n  }\n\n  inputChanged = (event) => {\n    this.setState({\n      task: event.target.value,\n    });\n  }\n\n  submitEditItem = (event, value) => {\n    event.preventDefault();\n\n    if (value.trim() !== '') {\n      const newTask = {\n        task: value,\n      };\n\n      this.onEditSubmitted(newTask);\n\n      this.setState({\n        task: '',\n      });\n    }\n\n    this.onFocusChanged();\n  };\n\n  onEditSubmitted = (newTask) => {\n    this.setState(prev => ({\n      todos: prev.todos.map(todo => (\n        todo.id === prev.editTodoId\n          ? { ...todo, task: newTask.task, isActive: true }\n          : todo)),\n      editTodoId: null,\n      showEditField: false,\n    }));\n  }\n\n  filterTodos = () => this.state.todos.filter((todo) => {\n    switch (this.state.showTodos) {\n      case 'all':\n        return true;\n      case 'completed':\n        return !todo.isActive;\n      case 'active':\n        return todo.isActive;\n      default:\n        return true;\n    }\n  });\n\n  setActive = (todoId, status) => {\n    this.setState(prev => ({\n      ...prev,\n      todos: prev.todos.map(todo => (todo.id !== todoId\n        ? todo\n        : { ...todo, isActive: status })),\n    }));\n  };\n\n  onButtonSelected = (type) => {\n    this.setState({\n      showTodos: type,\n    });\n  }\n\n  deleteTodo = (id) => {\n    this.setState(prev => ({\n      todos: prev.todos.filter(todo => todo.id !== id),\n    }));\n  }\n\n  deleteSelectedTodo = () => {\n    this.setState(prev => ({\n      todos: prev.todos.filter(todo => todo.isActive),\n    }));\n  }\n\n  selectAll = () => {\n    this.setState((prev) => {\n      const allCompleted = prev.todos.every(todo => !todo.isActive);\n\n      return {\n        ...prev,\n        todos: prev.todos.map(todo => ({ ...todo, isActive: allCompleted })),\n      };\n    });\n  }\n\n  editTodo = (id) => {\n    this.setState({\n      showEditField: true,\n      editTodoId: id,\n    });\n  }\n\n  onFocusChanged = () => {\n    this.setState({\n      showEditField: false,\n      editTodoId: null,\n    });\n  }\n\n  render() {\n    const {\n      todos,\n      showEditField,\n      editTodoId,\n      task,\n      showButton,\n      showTodos,\n    } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <InputForm\n            todos={todos}\n            onSubmitted={this.newItemSubmitted}\n          />\n        </header>\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            checked={todos.length\n              ? todos.every(todo => !todo.isActive)\n              : false}\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={this.selectAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <ul className=\"todo-list\">\n            {this.filterTodos().map(todo => (\n              <TodoItem\n                todo={todo}\n                key={todo.id}\n                deleteTodo={this.deleteTodo}\n                setActive={this.setActive}\n                editTodo={this.editTodo}\n                showEditField={showEditField}\n                editTodoId={editTodoId}\n                submitEditItem={this.submitEditItem}\n                task={task}\n                inputChanged={this.inputChanged}\n                onFocusChanged={this.onFocusChanged}\n              />\n            ))}\n          </ul>\n        </section>\n\n        <Footer\n          todos={todos}\n          showButton={showButton}\n          deleteSelectedTodo={this.deleteSelectedTodo}\n          onButtonSelected={this.onButtonSelected}\n          filterTodos={this.filterTodos}\n          active={showTodos}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}